const { createHash } = require('node:crypto');

/**
 * Genera un hash SHA-256 para una contraseña proporcionada.
 * Esta función no utiliza 'salt', por lo que no es recomendada para producción.
 * Considere usar librerías como bcrypt que gestionan 'salting' automáticamente.
 * @function hashPass
 * @param {string} [password=''] - La contraseña en texto plano que se va a hashear.
 * @returns {string} La representación hexadecimal del hash de la contraseña.
 */
const hashPass = function(password = '') {
  return createHash('sha256').update(password).digest('hex');
};

/**
 * Compara una contraseña en texto plano con un hash existente para verificar si coinciden.
 * @function verificarPass
 * @param {string} [password=''] - La contraseña en texto plano a verificar.
 * @param {string} [passHasheada=''] - El hash de contraseña existente contra el cual comparar.
 * @returns {boolean} Devuelve `true` si la contraseña coincide con el hash, de lo contrario `false`.
 */
const verificarPass = function(password = '', passHasheada = '') {
  const newPassHasheada = createHash('sha256').update(password).digest('hex');
  return passHasheada === newPassHasheada;
};

module.exports = { hashPass, verificarPass };